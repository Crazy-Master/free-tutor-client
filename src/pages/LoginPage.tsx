import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../store/auth";
import Button from "../components/Button";
import Card from "../components/Card";

const LoginPage = () => {
  const [login, setLogin] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");

  const { login: saveToken } = useAuth();      // üëà —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
  const navigate = useNavigate();              // üëà –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ /tasks

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");

    try {
      const response = await fetch("https://api-tutor-master.ru/api/auth/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ login, password }),
      });

      if (response.status === 401) {
        setError("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
        return;
      }
    
      if (!response.ok) {
        setError("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        return;
      }

      const data = await response.json();
      saveToken(data.tokenString);
      navigate("/tasks");

    } catch (err) {
      setError("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ. "+err);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 flex justify-center items-center">
      <Card className="w-full max-w-md">
        <h2 className="text-2xl font-bold mb-4">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <label className="block mb-1">–õ–æ–≥–∏–Ω</label>
            <input
              type="text"
              className="w-full border rounded px-3 py-2"
              value={login}
              onChange={(e) => setLogin(e.target.value)}
              required
            />
          </div>
          <div>
            <label className="block mb-1">–ü–∞—Ä–æ–ª—å</label>
            <input
              type="password"
              className="w-full border rounded px-3 py-2"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </div>
          {error && <p className="text-red-600 text-sm">{error}</p>}
          <Button type="submit" className="w-full">–í–æ–π—Ç–∏</Button>
        </form>
      </Card>
    </div>
  );
};

export default LoginPage;
